-------Program State-------
Symbol Table:

Execution Stack:
Ref(int) v;new(v, 20);Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:

Execution Stack:
Ref(int) v
new(v, 20);Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:

Execution Stack:
Ref(int) v
new(v, 20);Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:
v -> (0, int)

Execution Stack:
new(v, 20);Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:
v -> (0, int)

Execution Stack:
new(v, 20);Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:
v -> (0, int)

Execution Stack:
new(v, 20)
Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:
v -> (0, int)

Execution Stack:
new(v, 20)
Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:

---------------------------

-------Program State-------
Symbol Table:
v -> (1, int)

Execution Stack:
Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
v -> (1, int)

Execution Stack:
Ref(Ref(int)) a;new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
v -> (1, int)

Execution Stack:
Ref(Ref(int)) a
new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
v -> (1, int)

Execution Stack:
Ref(Ref(int)) a
new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
a -> (0, Ref(int))
v -> (1, int)

Execution Stack:
new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
a -> (0, Ref(int))
v -> (1, int)

Execution Stack:
new(a, v);new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
a -> (0, Ref(int))
v -> (1, int)

Execution Stack:
new(a, v)
new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
a -> (0, Ref(int))
v -> (1, int)

Execution Stack:
new(a, v)
new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (1, int)

Execution Stack:
new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20
2 -> (1, int)

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (1, int)

Execution Stack:
new(v, 30);print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20
2 -> (1, int)

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (1, int)

Execution Stack:
new(v, 30)
print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20
2 -> (1, int)

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (1, int)

Execution Stack:
new(v, 30)
print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20
2 -> (1, int)

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (3, int)

Execution Stack:
print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (3, int)

Execution Stack:
print(rH(rH(a)))

Output List:

File Table:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (3, int)

Execution Stack:

Output List:
20

File Table:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

---------------------------

-------Program State-------
Symbol Table:
a -> (2, Ref(int))
v -> (3, int)

Execution Stack:

Output List:
20

File Table:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30

---------------------------

